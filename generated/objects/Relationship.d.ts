/**
 * Interface definitions for Relationship
 * Canonical graph edge linking two entities with lifecycle, ownership, and tagging semantics.
 *
 * DO NOT EDIT - This file is auto-generated by the object type generator.
 * Source: /Users/systemsystems/portfolio/Design_System_Project/app/objects/core/Relationship.object.yaml
 * Traits: Labelled, Stateful, Timestampable, Ownerable, Taggable
 */
export interface StateTransition {
  readonly from_state: string;
  readonly to_state: string;
  readonly timestamp: string;
  readonly reason?: string;
  readonly actor_id?: string;
}

export interface Relationship {
  /**
   * Timestamp recording when the entity was first created.
   *
   * Source: Timestampable (trait)
   */
  created_at: string;

  /**
   * Supporting description used in detail contexts.
   *
   * Source: Labelled (trait)
   */
  description?: string;

  /**
   * Directionality applied when traversing the relationship.
   *
   * Source: Relationship (object override)
   *
   * Default: 'bidirectional'
   */
  direction: 'unidirectional' | 'bidirectional';

  /**
   * Flag indicating whether the relationship is symmetric.
   *
   * Source: Relationship (object override)
   *
   * Default: true
   */
  is_bidirectional: boolean;

  /**
   * Human-readable display name rendered in primary surfaces.
   *
   * Source: Labelled (trait)
   */
  label: string;

  /**
   * Lifecycle event associated with the most recent timestamp mutation.
   *
   * Source: Timestampable (trait)
   */
  last_event: 'created' | 'activated' | 'paused' | 'terminated' | 'reactivated';

  /**
   * Timestamp for the lifecycle event captured in last_event.
   *
   * Source: Timestampable (trait)
   */
  last_event_at?: string;

  /**
   * System that originated or inferred the relationship.
   *
   * Source: Relationship (object override)
   */
  origin_source?: 'manual' | 'ingestion' | 'analytics' | 'integration';

  /**
   * Identifier of the owning principal scoped by owner_type.
   *
   * Source: Ownerable (trait)
   */
  owner_id: string;

  /**
   * Categorical owner type sourced from the ownerTypes parameter.
   *
   * Source: Ownerable (trait)
   */
  owner_type: 'organization' | 'team' | 'platform';

  /**
   * Optional role name describing how the owner governs the entity.
   *
   * Source: Ownerable (trait)
   */
  ownership_role?: string;

  /**
   * Timestamp recording when ownership was last transferred.
   *
   * Source: Ownerable (trait)
   */
  ownership_transferred_at?: string;

  /**
   * Hint copy surfaced in form fields when empty.
   *
   * Source: Labelled (trait)
   */
  placeholder?: string;

  /**
   * Primary identifier for the relationship edge.
   *
   * Source: Relationship (object override)
   */
  relationship_id: string;

  /**
   * Semantic type describing the edge between the source and target.
   *
   * Source: Relationship (object override)
   */
  relationship_type: 'membership' | 'ownership' | 'follows' | 'depends_on' | 'references';

  /**
   * Identifier of the source node in the relationship.
   *
   * Source: Relationship (object override)
   */
  source_id: string;

  /**
   * Chronological log of state transitions.
   *
   * Source: Stateful (trait)
   *
   * Default: []
   */
  state_history?: StateTransition[];

  /**
   * Canonical lifecycle state derived from the states parameter.
   *
   * Source: Stateful (trait)
   */
  status: 'proposed' | 'active' | 'paused' | 'completed' | 'terminated';

  /**
   * Signal representing how strongly the entities are connected.
   *
   * Source: Relationship (object override)
   */
  strength?: 'low' | 'medium' | 'high';

  /**
   * Computed number of tags assigned to the entity.
   *
   * Source: Taggable (trait)
   *
   * Default: 0
   */
  tag_count: number;

  /**
   * Ordered list of tags assigned to the entity.
   *
   * Source: Taggable (trait)
   *
   * Default: []
   */
  tags?: string[];

  /**
   * Identifier of the target node in the relationship.
   *
   * Source: Relationship (object override)
   */
  target_id: string;

  /**
   * Timestamp for the most recent modification, when available.
   *
   * Source: Timestampable (trait)
   */
  updated_at?: string;
}
